abstract concept Text:
    # This is an abstract object containing text.
    required link body -> str:
        constraint maxlength:
            # Maximum length of text is 10000
            # characters.
            10000

concept User is builtins.NamedObject
# NamedObject is a standard abstract base class,
# that provides a name link.

abstract concept OwnedObject:
    # By default links are optional.
    required link owner -> User

concept Status is builtins.Dictionary
# Dictionary is a NamedObject variant, that enforces
# name uniqueness across all instances if its subclass.

concept Priority is builtins.Dictionary

concept LogEntry is OwnedObject, Text:
    # LogEntry is an OwnedObject and a Text, so it
    # will have all of their links and attributes,
    # in particular, owner and text links.
    required link spent_time -> int

atom issue_num_t is builtins.sequence
# issue_num_t is defined as a concrete sequence type,
# used to generate sequential issue numbers.

concept Comment is Text, OwnedObject:
    required link issue -> Issue
    link parent -> Comment

concept Issue is builtins.NamedObject, OwnedObject, Text:

    required link number -> issue_num_t:
        readonly: true
        # The number values are automatically generated,
        # and are not supposed to be directly writable.

    required link status -> Status

    link priority -> Priority

    link watchers -> User:
        mapping: **
        # The watchers link is mapped to User concept in
        # many-to-many relation.  The default mapping is
        # *1 -- many-to-one.

    link time_estimate -> int

    link time_spent_log -> LogEntry:
        mapping: 1*
        # 1* -- one-to-many mapping.

    link start_date -> datetime:
        default :=
            SELECT datetime::current_datetime()
            # The default value of start_date will be a
            # result of the EdgeQL expression above.

    link due_date -> datetime

    link related_to -> Issue:
        mapping: **
