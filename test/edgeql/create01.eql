CreatE CONSTRAINT std::regexp INHERITING std::constraint {
    SET errmessage := 'invalid {subject}';
    SET expr := ((subject ~ $param));
};



CreatE        : keyword.other.declaration.edgeql, source.edgeql
              : source.edgeql
CONSTRAINT    : keyword.other.declaration.edgeql, source.edgeql
              : source.edgeql
std           : source.edgeql, support.type.builtin.edgeql
::            : keyword.operator.namespace.edgeql, source.edgeql
regexp        : source.edgeql
INHERITING    : keyword.other.declaration.edgeql, source.edgeql
              : source.edgeql
std           : source.edgeql, support.type.builtin.edgeql
::            : keyword.operator.namespace.edgeql, source.edgeql
constraint {  : source.edgeql
              : source.edgeql
SET           : keyword.other.declaration.edgeql, source.edgeql
 errmessage   : source.edgeql
:=            : keyword.operator.edgeql, source.edgeql
              : source.edgeql
'             : punctuation.definition.string.begin.edgeql, source.edgeql, string.quoted.edgeql
invalid {subject} : source.edgeql, string.quoted.edgeql
'             : punctuation.definition.string.end.edgeql, source.edgeql, string.quoted.edgeql
;             : punctuation.statement.delimiter.edgeql, source.edgeql
              : source.edgeql
SET           : keyword.other.declaration.edgeql, source.edgeql
 expr         : source.edgeql
:=            : keyword.operator.edgeql, source.edgeql
              : source.edgeql
(             : meta.shape.edgeql, punctuation.parenthesis.begin.edgeql, source.edgeql
(             : meta.shape.edgeql, punctuation.parenthesis.begin.edgeql, source.edgeql
subject       : meta.shape.edgeql, source.edgeql
~             : keyword.operator.edgeql, meta.shape.edgeql, source.edgeql
              : meta.shape.edgeql, source.edgeql
$             : constant.language.variable.edgeql, meta.shape.edgeql, source.edgeql
param         : constant.language.variable.edgeql, meta.shape.edgeql, source.edgeql
)             : meta.shape.edgeql, punctuation.parenthesis.end.edgeql, source.edgeql
)             : meta.shape.edgeql, punctuation.parenthesis.end.edgeql, source.edgeql
;             : punctuation.statement.delimiter.edgeql, source.edgeql
}             : source.edgeql
;             : punctuation.statement.delimiter.edgeql, source.edgeql
