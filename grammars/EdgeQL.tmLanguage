<!-- AUTOGENERATED FROM grammars/EdgeQL.syntax.yaml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>EdgeQL</string>
    <key>scopeName</key>
    <string>source.edgeql</string>
    <key>fileTypes</key>
    <array>
      <string>edgeql</string>
      <string>eql</string>
    </array>
    <key>uuid</key>
    <string>a560aad6-9c13-49c5-a369-5fb272c8ec1a</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#all</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>all</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#queries</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.statement.delimiter.edgeql</string>
            <key>match</key>
            <string>(;)</string>
          </dict>
        </array>
      </dict>
      <key>expressions</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#builtins</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#values</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parenthesised</string>
          </dict>
        </array>
      </dict>
      <key>parenthesised</key>
      <dict>
        <key>name</key>
        <string>meta.shape.edgeql</string>
        <key>begin</key>
        <string>(\()</string>
        <key>end</key>
        <string>(\))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.parenthesis.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#queries</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line.note.edgeql</string>
            <key>match</key>
            <string>(#)\s*(BUG|FIXME|TODO|XXX).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.edgeql</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>comment.line.note.notation.edgeql</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.number-sign.edgeql</string>
            <key>match</key>
            <string>(#).*$\n?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.edgeql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.declaration.edgeql</string>
            <key>match</key>
            <string>(?ix) \b(?&lt;![:\.])(
  abstract | action | after | all | alter | and | any | as |
  asc | atom | attribute | before | by | commit |
  concept | constraint | create | database | delete | delta |
  desc | distinct | drop | except | exists | event |
  filter | final | first | for | from | function | group |
  ilike | in | index | inherit | inheriting | inout |
  intersect | is | last | like | limit | link | mod |
  module | no | not | nulls | of | offset |
  operator | or | order | out | over | partition | policy |
  property | required | rename | returning | rollback | set |
  single | some | start | target | then | to | transaction |
  union | using | where | with
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.true.edgeql</string>
            <key>match</key>
            <string>(?i)\b(true)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.false.edgeql</string>
            <key>match</key>
            <string>(?i)\b(false)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.null.edgeql</string>
            <key>match</key>
            <string>(?i)\b(null)\b</string>
          </dict>
        </array>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.edgeql</string>
            <key>match</key>
            <string>(?x)
  = | @@! | @@ | := |

  # EdgeQL-specific multi-char ops
  (?&lt;opchar_edgeql&gt;[~!\#&amp;|?])
    ((?&lt;opchar&gt;[~!\#&amp;|?+\-*/^&lt;&gt;=]) (?!/\*|--))+
  |
  (\g&lt;opchar&gt; (?!/\*|--))+ \g&lt;opchar_edgeql&gt; (\g&lt;opchar&gt; (?!/\*|--))*
  |
  # SQL-only multi-char ops cannot end in + or -
  ((?&lt;opchar_sql&gt;[+\-*/^&lt;&gt;=]) (?!/\*|--))+ [*/^&lt;&gt;=]
  |
  # single char edgeql operator
  \g&lt;opchar_edgeql&gt;
  |
  # single char sql operator
  [@+\-*/%^&lt;&gt;=]
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.namespace.edgeql</string>
            <key>match</key>
            <string>(::)</string>
          </dict>
        </array>
      </dict>
      <key>builtins</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.type.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;![:\.])(
  std | any | typeref | atomref | conceptref | bytes |
  datetime | uuid | str | timedelta | date | time | int | none |
  float | bool | pattern | sequence
)\b
</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.function.constraint.builtin.edgeql</string>
            <key>match</key>
            <string>(?x) \b(?&lt;![:\.])(
  constraint | max | enum | min | minexclusive | length |
  minlength | regexp | maxlength | maxexclusive | unique
)\b
</string>
          </dict>
        </array>
      </dict>
      <key>types</key>
      <dict>
        <key>name</key>
        <string>storage.type.edgeql</string>
        <key>match</key>
        <string>(list|map)(?=\s*&lt;)</string>
      </dict>
      <key>variables</key>
      <dict>
        <key>name</key>
        <string>constant.language.variable.edgeql</string>
        <key>begin</key>
        <string>(\$)(?=[[:alpha:]_]|`)</string>
        <key>end</key>
        <string>(?&lt;=[[:alnum:]_`])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
        </array>
      </dict>
      <key>link-properties</key>
      <dict>
        <key>name</key>
        <string>support.other.linkproperty.edgeql</string>
        <key>begin</key>
        <string>(\@)</string>
        <key>end</key>
        <string>(?&lt;=[[:alnum:]_`])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
        </array>
      </dict>
      <key>identifier</key>
      <dict>
        <key>match</key>
        <string>([[:alpha:]_][[:alnum:]_]*)</string>
      </dict>
      <key>quoted-name</key>
      <dict>
        <key>name</key>
        <string>string.interpolated.edgeql</string>
        <key>match</key>
        <string>(`.*?`)</string>
      </dict>
      <key>values</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#number</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
        </array>
      </dict>
      <key>number</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.edgeql</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#number-dec</string>
          </dict>
        </array>
      </dict>
      <key>number-dec</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.dec.edgeql</string>
        <key>match</key>
        <string>(?x)
    (?:
      #decimal part
      \.(_*)(?:[0-9](?:[0-9_]*[0-9])?)
      |
      # integer part
      \b(?:[1-9](?:[0-9_]*[0-9])?|0)
        (?:\.(_*)[0-9](?:[0-9_]*[0-9])?)?
    )
    ((_*)([eE][\+\-]?)(_*)[0-9](?:[0-9_]*[0-9])?)?

  (_*)
  \b
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>storage.type.number.edgeql</string>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
          <key>7</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.dec.edgeql</string>
          </dict>
        </dict>
      </dict>
      <key>string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.edgeql</string>
            <key>begin</key>
            <string>(['"])</string>
            <key>end</key>
            <string>(\1)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string-escapes</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.dollar.edgeql</string>
            <key>begin</key>
            <string>(\$([[:alpha:]_][[:alnum:]]*)*\$)</string>
            <key>end</key>
            <string>(\1)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.edgeql</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.edgeql</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string-escapes</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.edgeql</string>
        <key>match</key>
        <string>(\\['"])</string>
      </dict>
      <key>links</key>
      <dict>
        <key>name</key>
        <string>variable.parameter.shape.edgeql</string>
        <key>begin</key>
        <string>(?=[[:alpha:]_]|`)</string>
        <key>end</key>
        <string>(?=[\s,:{})])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
        </array>
      </dict>
      <key>queries</key>
      <dict>
        <key>name</key>
        <string>meta.query.edgeql</string>
        <key>begin</key>
        <string>(?xi) (SELECT | INSERT | UPDATE )
</string>
        <key>end</key>
        <string>(?=WHERE|RETURNING|;)|(?&lt;=\})(?!\s*\{)|(?&lt;=\))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.query.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#path</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#shape</string>
          </dict>
        </array>
      </dict>
      <key>path</key>
      <dict>
        <key>contentName</key>
        <string>entity.name.function.path.edgeql</string>
        <key>begin</key>
        <string>(?=[[:alpha:]_]|`)</string>
        <key>end</key>
        <string>(?&lt;=[[:alnum:]_`])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#quoted-name</string>
          </dict>
        </array>
      </dict>
      <key>shape</key>
      <dict>
        <key>name</key>
        <string>meta.shape.edgeql</string>
        <key>begin</key>
        <string>(\{)</string>
        <key>end</key>
        <string>(\})</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.shape.begin.edgeql</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.shape.end.edgeql</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#links</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#link-properties</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#shape</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
